// <auto-generated />
using System;
using AwningsAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AwningsAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251023131410_brackets2")]
    partial class brackets2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AwningsAPI.Model.Customers.Customer", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eircode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Residential")
                        .HasColumnType("bit");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VATNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Address1 = "123 Main Street",
                            Address2 = "Suite 100",
                            CompanyNumber = "ACME123",
                            CountryId = 1,
                            County = "Dublin",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Eircode = "D01XY12",
                            Email = "info@acme.ie",
                            Mobile = "+35387654321",
                            Name = "Acme Corporation",
                            Phone = "+35312345678",
                            RegistrationNumber = "REG456789",
                            Residential = false,
                            TaxNumber = "TAX123456",
                            VATNumber = "VAT987654"
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Customers.CustomerContact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ContactId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CustomerContacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            CompanyId = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@acme.ie",
                            FirstName = "John",
                            LastName = "Doe",
                            Mobile = "+35387654322",
                            Phone = "+35312345679"
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Products.Brackets", b =>
                {
                    b.Property<int>("BracketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BracketId"));

                    b.Property<string>("BracketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("BracketId");

                    b.HasIndex("ProductId");

                    b.ToTable("Brackets");

                    b.HasData(
                        new
                        {
                            BracketId = 1,
                            BracketName = "Face fixture bracket 150 mm / 3",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "71624",
                            Price = 42.70m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 2,
                            BracketName = "Face fixture bracket 300 mm left / 4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "70617",
                            Price = 73.50m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 3,
                            BracketName = "Face fixture bracket 300 mm right / 4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "70600",
                            Price = 73.50m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 4,
                            BracketName = "Stand-off bkt. 80-300 mm for face fixture for face fixture bracket 300 mm / 4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "77968",
                            Price = 220.50m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 5,
                            BracketName = "Top fixture bracket 150 mm / 4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "71625",
                            Price = 42.70m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 6,
                            BracketName = "Eaves fixture bracket 150mm, complete / 4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "71669",
                            Price = 99.30m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 7,
                            BracketName = "Eaves fixture bracket 270 mm /4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "71659",
                            Price = 77.00m,
                            ProductId = 6,
                            UpdatedBy = 0
                        },
                        new
                        {
                            BracketId = 8,
                            BracketName = "Angle and plate for eaves fixture (machine finish) / 4",
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PartNumber = "716620",
                            Price = 125.20m,
                            ProductId = 6,
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Products.Projections", b =>
                {
                    b.Property<int>("ProjectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectionId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Projection_cm")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Width_cm")
                        .HasColumnType("int");

                    b.HasKey("ProjectionId");

                    b.HasIndex("ProductId");

                    b.ToTable("Projections");

                    b.HasData(
                        new
                        {
                            ProjectionId = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1873m,
                            ProductId = 6,
                            Projection_cm = 150,
                            UpdatedBy = 0,
                            Width_cm = 250
                        },
                        new
                        {
                            ProjectionId = 2,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2023m,
                            ProductId = 6,
                            Projection_cm = 150,
                            UpdatedBy = 0,
                            Width_cm = 300
                        },
                        new
                        {
                            ProjectionId = 3,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2229m,
                            ProductId = 6,
                            Projection_cm = 150,
                            UpdatedBy = 0,
                            Width_cm = 350
                        },
                        new
                        {
                            ProjectionId = 4,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2397m,
                            ProductId = 6,
                            Projection_cm = 150,
                            UpdatedBy = 0,
                            Width_cm = 400
                        },
                        new
                        {
                            ProjectionId = 5,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2554m,
                            ProductId = 6,
                            Projection_cm = 150,
                            UpdatedBy = 0,
                            Width_cm = 450
                        },
                        new
                        {
                            ProjectionId = 6,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2730m,
                            ProductId = 6,
                            Projection_cm = 150,
                            UpdatedBy = 0,
                            Width_cm = 500
                        },
                        new
                        {
                            ProjectionId = 7,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1979m,
                            ProductId = 6,
                            Projection_cm = 200,
                            UpdatedBy = 0,
                            Width_cm = 250
                        },
                        new
                        {
                            ProjectionId = 8,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2145m,
                            ProductId = 6,
                            Projection_cm = 200,
                            UpdatedBy = 0,
                            Width_cm = 300
                        },
                        new
                        {
                            ProjectionId = 9,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2319m,
                            ProductId = 6,
                            Projection_cm = 200,
                            UpdatedBy = 0,
                            Width_cm = 350
                        },
                        new
                        {
                            ProjectionId = 10,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2508m,
                            ProductId = 6,
                            Projection_cm = 200,
                            UpdatedBy = 0,
                            Width_cm = 400
                        },
                        new
                        {
                            ProjectionId = 11,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2664m,
                            ProductId = 6,
                            Projection_cm = 200,
                            UpdatedBy = 0,
                            Width_cm = 450
                        },
                        new
                        {
                            ProjectionId = 12,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2842m,
                            ProductId = 6,
                            Projection_cm = 200,
                            UpdatedBy = 0,
                            Width_cm = 500
                        },
                        new
                        {
                            ProjectionId = 13,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2248m,
                            ProductId = 6,
                            Projection_cm = 250,
                            UpdatedBy = 0,
                            Width_cm = 300
                        },
                        new
                        {
                            ProjectionId = 14,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2431m,
                            ProductId = 6,
                            Projection_cm = 250,
                            UpdatedBy = 0,
                            Width_cm = 350
                        },
                        new
                        {
                            ProjectionId = 15,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2627m,
                            ProductId = 6,
                            Projection_cm = 250,
                            UpdatedBy = 0,
                            Width_cm = 400
                        },
                        new
                        {
                            ProjectionId = 16,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2798m,
                            ProductId = 6,
                            Projection_cm = 250,
                            UpdatedBy = 0,
                            Width_cm = 450
                        },
                        new
                        {
                            ProjectionId = 17,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2970m,
                            ProductId = 6,
                            Projection_cm = 250,
                            UpdatedBy = 0,
                            Width_cm = 500
                        },
                        new
                        {
                            ProjectionId = 18,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2547m,
                            ProductId = 6,
                            Projection_cm = 300,
                            UpdatedBy = 0,
                            Width_cm = 350
                        },
                        new
                        {
                            ProjectionId = 19,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2750m,
                            ProductId = 6,
                            Projection_cm = 300,
                            UpdatedBy = 0,
                            Width_cm = 400
                        },
                        new
                        {
                            ProjectionId = 20,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2904m,
                            ProductId = 6,
                            Projection_cm = 300,
                            UpdatedBy = 0,
                            Width_cm = 450
                        },
                        new
                        {
                            ProjectionId = 21,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 3084m,
                            ProductId = 6,
                            Projection_cm = 300,
                            UpdatedBy = 0,
                            Width_cm = 500
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Suppliers.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux MX-1 compact",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 2,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux MX-4",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 3,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux MX-2",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 4,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 6000",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 5,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux MX-3",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 6,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 990",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 7,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 970",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 8,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 5010",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 9,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 3300",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 10,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 1710",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductId = 11,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 900",
                            ProductTypeId = 1,
                            SupplierId = 1,
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Suppliers.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Folding-arm Cassette Awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 2,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Folding-arm Semi-cassette Awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 3,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Open Folding-arm Awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 4,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stretch-Awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 5,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wind Protection and Privacy",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 6,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Awning Systems",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 7,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Free-standing awning stand systems",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 8,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pergola awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 9,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conservatory and Glass Canopy Awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ProductTypeId = 10,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vertical Roller Blinds and Awnings",
                            SupplierId = 1,
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Suppliers.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierName = "Markilux",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 0
                        },
                        new
                        {
                            SupplierId = 2,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierName = "Rensen",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 0
                        },
                        new
                        {
                            SupplierId = 3,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierName = "Practic",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Workflow.InitialEnquiry", b =>
                {
                    b.Property<int>("EnquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnquiryId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int");

                    b.HasKey("EnquiryId");

                    b.ToTable("InitialEnquiries");
                });

            modelBuilder.Entity("AwningsAPI.Model.Workflow.WorkflowStart", b =>
                {
                    b.Property<int>("WorkflowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkflowId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("CreateQuote")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InitialEnquiry")
                        .HasColumnType("bit");

                    b.Property<bool>("InviteShowRoom")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceSent")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("SetupSiteVisit")
                        .HasColumnType("bit");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("WorkflowId");

                    b.HasIndex("ProductId");

                    b.ToTable("WorkflowStarts");

                    b.HasData(
                        new
                        {
                            WorkflowId = 1,
                            CompanyId = 1,
                            CreateQuote = false,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Markilux 990 for outside garden",
                            InitialEnquiry = false,
                            InviteShowRoom = false,
                            InvoiceSent = false,
                            ProductId = 6,
                            ProductTypeId = 1,
                            SetupSiteVisit = false,
                            SupplierId = 1,
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("AwningsAPI.Model.Customers.CustomerContact", b =>
                {
                    b.HasOne("AwningsAPI.Model.Customers.Customer", "Customer")
                        .WithMany("CustomerContacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AwningsAPI.Model.Products.Brackets", b =>
                {
                    b.HasOne("AwningsAPI.Model.Suppliers.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AwningsAPI.Model.Products.Projections", b =>
                {
                    b.HasOne("AwningsAPI.Model.Suppliers.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AwningsAPI.Model.Suppliers.Product", b =>
                {
                    b.HasOne("AwningsAPI.Model.Suppliers.ProductType", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AwningsAPI.Model.Suppliers.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("AwningsAPI.Model.Workflow.WorkflowStart", b =>
                {
                    b.HasOne("AwningsAPI.Model.Suppliers.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AwningsAPI.Model.Customers.Customer", b =>
                {
                    b.Navigation("CustomerContacts");
                });

            modelBuilder.Entity("AwningsAPI.Model.Suppliers.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AwningsAPI.Model.Suppliers.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
